Git Commands:

git --version
git config --global user.name "ramesh"
git config --global user.mail "ramesh@"
git init --bare central.git
git clone central.git  workspace1
touch 1.java
git add 1.java
git commit -m "first commit"
git config --global alias.add-commit '!git add -A && git commit'
git add-commit -m "add+commit in one command"
git log 
git log --oneline 
echo "line1" > 1.java
git show 123abcd
git push 
git clone /central.git workspace2
git log
git log --grep "first commit" 
git log --oneline --grep "commit"


touch .gitignore
echo *.xml > .gitignore
echo *2.java > .gitignore
git commit -m ".gitignore"
git branch                  (to see current branch)
git branch b1               (to create b1 branch)
git checkout branch1        (to go to the branch1)
git log --oneline
git merge branch1 master    (create a new commit id)
git cherry-pick 123abcd     (to merge single commit)
git remote add origin https://github.com/rameshrocks/repo1.git 
git push -u --all           (to push all to central)
git clone github.com workspace2
git branch
git branch -D branch1       (to delete branch)
git branch -a               (branches obtained from central repo)
git checkout branch1

echo "idea1" > file1
echo "idea1" > file2
git stash                   (undo the changes and take the backup)
git stash list              (stash@{0} will display)
echo "idea2" > file1
echo "idea2" > file2
git stash                       
git stash list (stash@{0}, stash@{1} will display and stash@{0} is the latest one)
git stash apply stash@{0}
git stash clear


touch f1
echo aaaaaaa > f1
git add .
git commit -m " f1 commit"
echo bbbbbbb >> f2
git add .
git reset --soft           (id will delete)
git reset --mixed          (unstage)
git reset --hard           (delete id & unstage & remove latest data)
git reset                  (defaulty take --mixed)
git revert 1234xyz         (to undo the commit)
git checkout 1234xyz       (to go to the particular commit id location)
git checkout branch1
git checkout branch1@@1234xyz
git checkout master
git clean -f
git tag -a release3.2.1 -m "test commit for release 3.2.1" 1234xyz
git show release3.2.1
git tag                  
git push --tags
git tag -d release3.2.1

 









                              























